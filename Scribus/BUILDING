Generic build instructions are available in the INSTALL file. Please read these
notes for Scribus-specifc information plus notes about compiling Scribus on
particular distributions and operating systems.

REQUIREMENTS AND BUILDING
=========================

Install the below packages BEFORE running configure or compiling Scribus:

Requirements:
	Qt >= 3.3 (3.3.3 recommended)
	Freetype >= 2.1.0 (2.1.3+ recommended)
	libart >= 2.3.8+ (2.3.16+ recommended)

Recommended:
	CUPS
	libtiff >= 3.6.0
	Fontconfig >= 2.0
	LittleCMS = 1.12 (1.14+ recommended)
	LibXML2 >= 2.6.0
	GhostScript >= 8.0 (8.15 or greater preferred)
	Python >= 2.3
	tkinter for the font sampler script
	python-imaging for the font sampler preview

If any recommended libraries (and their dev/devel packages or headers) are not
installed, some features will be disabled by configure. If you later install
any of these dependencies, you will have to re-run configure and re-compile
Scribus before the features are enabled.

LIBRARIES IN NON-STANDARD LOCATIONS
===================================

You can skip this section unless (a) you have libraries installed in unusual
locations such as your home directory and are NOT installing Scribus to the
same --prefix as the libraries, or (b) Scribus is not finding libraries that
you KNOW you have installed (including the -dev/-devel package if appliccable).

If any of your libraries are in non-standard locations and not on the same
--prefix as you're configuring Scribus with, you will need to set some extra
environment variables when configuring and compiling Scribus to ensure that
configure and gcc can find all the required information. Where
/home/fred/libfred is the path to the the directory the lib was installed to
(--prefix), eg /usr/local or /home/fred/libfred (*NOT* the lib/ subdirectory
the actual library file is in), the following commands to bash should do the
trick:

	instdir=/home/fred/libfred
	export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${instdir}/lib/pkgconfig"
	export LIBRARY_PATH="${LIBRARY_PATH}:${instdir}/lib"
	export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${instdir}/lib"
	export CPATH="${CPATH}:${instdir}/include"
	export PATH="${PATH}:${instdir}/bin"

In most cases, you can get away with just some of them for any given lib, but
setting all of those means any of the several methods of finding libraries that
might be used should work. These requirements are standard for pretty much any
package, they are not specific to Scribus - it's just most packages don't
bother to explain this to you ;-)

In general, you should not add "-I/path" directives to `CXXFLAGS', `CPPFLAGS',
or `CFLAGS'; that's what `CPATH' is for. Similarly, use `LIBRARY_PATH' rather
than adding "-L/path" to `LDFLAGS' when trying to get `ld' to find a library.

`LD_LIBRARY_PATH' may also need to be set when running Scribus later. To avoid
this requirement under Linux, add the library path to `/etc/ld.so.conf' (on its
own line, nothing but the path, eg "/home/fred/libfred/lib" without the quotes)
and run ldconfig as root. Other operating systems have other requirements.

MacOS/X users may need to set `DYLD_LIBRARY_PATH' as well as `LD_LIBRARY_PATH'.

Note that Scribus's build scripts will always find a library installed to the
same --prefix as Scribus its self ; no special configuration should be required
in that case.  Any failure to do so is a bug and should be reported on
http://bugs.scribus.net/ .

REQUIREMENTS - DETAILS
======================

We strongly recommend having Qt 3.3.3+. Qt 3.3 is now the *minimum*. Older
versions of Qt are *not* supported. If you build Qt from sources, the
recommended ./configure switches are the same as used by KDE. Use of other
switches aside from those used by distro packages can make trouble shooting
issues very difficult at times.
See: http://developer.kde.org/build/compile_kde3_3.html

Scribus requires Freetype. If you are compiling from source, you will need to
have the freetype headers installed - these can usually be found in a -devel
package for your distro.

It is strongly recommended that you install the CUPS development packages if
you are compiling Scribus. Without CUPS, Scribus will have significantly
reduced printing functionality.

Fontconfig, if installed, will let Scribus find fonts using the same method as
most other major desktop applications such as all KDE and GNOME applications.
If fontconfig support is installed, Scribus will not search your X font path, X
server configuration, or X font server configuration for fonts - it will only
use fonts found using fontconfig and any custom font locations configured in
the preferences.

Python will be used to add scripting support to Scribus. If Python is not
found, or there are no header files for Python installed (usually because you
haven't installed the development package), the scripting support will not be
enabled.

See the distro-specific notes below for more information on installing and
using Scribus with your distro.


DISTRO SPECIFIC BUILD INFORMATION
=================================

This section contains information about compiling Scribus that's specific to
particular operating systems and Linux distros. More distro-specific
information can be found in the README.

Debian
======

Recommended packages for compiling from source on Sarge (Debian 3.1):
	libqt3-mt-dev (Required)
	libfreetype6-dev (Required)
	libart-2.0-dev (Required)
	libcupsys2-dev
	liblcms1-dev
	libfontconfig1-dev
	libtiff4-dev
	libxml2-dev
	python2.3-dev  or  python2.4-dev
	gs-afpl

You are unlikely to be able to compile Scribus 1.3.x on Debian 3.0 (Woody)
without significant upgrades; it is not at all recommended. Scribus 1.3.x
should be considered not to support Debian Woody.

More info in the README.

Red Hat / Fedora
================

Recommended packages for compiling from source on FC3:
	qt-devel (Required)
	freetype-devel (Required)
	libart_lgpl-devel (Required)
	fontconfig-devel
	cups-devel
	libtiff-devel
	libxml2-devel
	python-devel
	lcms-devel

You can install these packages with 'yum install packagename' as root. You may
need to run up2date first to set up your yum configuration. Be patient - the
first time you run yum it will take a long time to download the headers for all
the security updates that have been released.

More info in the README.

MacOS/X
=======

No build instructions yet. Please see the README for info on MacOS/X.

Microsoft Windows
=================

No build instructions yet. Please see the README for info on Scribus under
Windows.

Other distros/OSes
==================

Please feel free to submit a list of package names and versions required to
compile Scribus on your distro, or build instructions for your OS.
