IF(WIN32)
  ADD_DEFINITIONS(-DQT_DLL)
ENDIF(WIN32)

ADD_SUBDIRECTORY(dicts)
ADD_SUBDIRECTORY(doc)
ADD_SUBDIRECTORY(dtd)
ADD_SUBDIRECTORY(icons)
ADD_SUBDIRECTORY(keysets)
ADD_SUBDIRECTORY(loremipsum)
ADD_SUBDIRECTORY(manpages)
ADD_SUBDIRECTORY(profiles)
ADD_SUBDIRECTORY(qm)
ADD_SUBDIRECTORY(styles)
ADD_SUBDIRECTORY(swatches)
ADD_SUBDIRECTORY(templates)
ADD_SUBDIRECTORY(text)
ADD_SUBDIRECTORY(fonts)
ADD_SUBDIRECTORY(desaxe)
ADD_SUBDIRECTORY(unicodemap)
IF (WANT_DESIGNER)
  ADD_SUBDIRECTORY(designer)
ENDIF (WANT_DESIGNER)

SET(SCRIBUS_UI_SRC
  aboutplugins.ui
  aligndistribute.ui
  createrange.ui
  docitemattrprefs.ui
  docsections.ui
  guidemanager.ui
  gtfiledialog.ui
  ui/helpbrowser.ui
  hysettingsBase.ui
  insertaframe.ui
  latexeditor.ui
  lensdialogbase.ui
  multipleduplicate.ui
  multiprogressdialog.ui
  pageitemattributes.ui
  patterndialog.ui
  picsearch.ui
  picsearchoptions.ui
  picstatus.ui
  pluginmanagerprefsgui.ui
  shortcutwidget.ui
  smlinestylewidget.ui
  smreplacedia.ui
  smpstylewidget.ui
  smcstylewidget.ui
  smstyleimport.ui
  stylemanager.ui
  tabexternaltoolswidget.ui
  tabkeyboardshortcutswidget.ui
  tocindexprefs.ui
  useprintermarginsdialog.ui
  tabdisplay.ui
  tabgeneral.ui
  tabmiscellaneous.ui
  tabprinter.ui
  tabscrapbook.ui
  unicodesearch.ui
)

SET(SCRIBUS_MOC_CLASSES
  about.h
  aboutplugins.h
  actionmanager.h
  aligndistribute.h
  alignselect.h
  annota.h
  annot.h
  applytemplatedialog.h
  arrowchooser.h
  autoform.h
  autoformbuttongroup.h
  bookmwin.h
  bookpalette.h
  buttonicon.h
  canvas.h
  charselect.h
  chartablemodel.h
  chartableview.h
  charzoom.h
  checkDocument.h
  cmsprefs.h
  cmykfw.h
  collect4output.h
  colorblind.h
  colorchart.h
  colorcombo.h
  colorlistbox.h
  colorm.h
  commonstrings.h
  cpalette.h
  createrange.h
  cupsoptions.h
  curvewidget.h
  customfdialog.h
  dcolor.h
  deferredtask.h
  delpages.h
  docinfo.h
  docitemattrprefs.h
  docsections.h
  druck.h
  editor.h
  effectsdialog.h
  extimageprops.h
  fileloader.h
  filesearch.h
  filewatcher.h
  fontcombo.h
  fontprefs.h
  fontreplacedialog.h
  frameedit.h
  gradienteditor.h
  gtfiledialog.h
  gtdialogs.h
  guidemanager.h
  guidesdelegate.h
  guidesmodel.h
  helpbrowser.h
  hruler.h
  hyask.h
  hyphenator.h
  hysettings.h
  imageinfodialog.h
  insertaframe.h
  insertTable.h
  inspage.h
  javadocs.h
  latexeditor.h
  latexhighlighter.h
  layers.h
  lensdialog.h
  loadsaveplugin.h
  loremipsum.h
  margindialog.h
  marginWidget.h
  measurements.h
  menumanager.h
  mergedoc.h
  movepage.h
  missing.h
  mpalette.h
  multipleduplicate.h
  multiprogressdialog.h
  muster.h
  navigator.h
  newfile.h
  newtemp.h
  observable.h
  oneclick.h
  pageitem.h
  pageitemattributes.h
  pageitem_imageframe.h
  pageitem_line.h
  pageitem_pathtext.h
  pageitem_polygon.h
  pageitem_polyline.h
  pageitem_textframe.h
  pageitem_latexframe.h
  pagelayout.h
  pageselector.h
  patterndialog.h
  pdflib.h
  pdflib_core.h
  pdfopts.h
  picsearch.h
  picsearchoptions.h
  picstatus.h
  pluginmanager.h
  pluginmanagerprefsgui.h
  polygonwidget.h
  polyprops.h
  prefs.h
  prefsdialogbase.h
  prefsmanager.h
  prefspanel.h
  preview.h
  pslib.h
  query.h
  reformdoc.h
  rulermover.h
  sampleitem.h
  scinputdialog.h
  scmenu.h
  scmessagebox.h
  scfilewidget.h
  scgtplugin.h
  scplugin.h
  scraction.h
  scrap.h
  scribus.h
  scribusapp.h
  scribuscore.h
  scribusdoc.h
  scribusview.h
  scribuswin.h
  scrpalettebase.h
  scrspinbox.h
  sctablewidget.h
  sctoolbar.h
  sctextbrowser.h
  search.h
  seiten.h
  selection.h
  selfield.h
  shadebutton.h
  shortcutwidget.h
  smalignselect.h
  smfontcomboh.h
  smlinestyle.h
  smlinestylewidget.h
  smreplacedia.h
  smsccombobox.h
  smcolorcombo.h
  smscrspinbox.h
  smshadebutton.h
  smspinbox.h
  smstyleimport.h
  smstyleselect.h
  smtabruler.h
  smtextstyles.h
  smcstylewidget.h
  smpstylewidget.h
  spalette.h
  story.h
  styleitem.h
  stylemanager.h
  styleselect.h
  styleview.h
  tabcheckdoc.h
  tabexternaltoolswidget.h
  tabkeyboardshortcutswidget.h
  tabdisplay.h
  tabdocument.h
  tabgeneral.h
  tabguides.h
  tabmanager.h
  tabmiscellaneous.h
  tabpdfoptions.h
  tabprinter.h
  tabruler.h
  tabscrapbook.h
  tabtools.h
  tabtypography.h
  tocgenerator.h
  tocindexprefs.h
  tree.h
  tt/simpletreemodel/treemodel.h
  schelptreemodel.h
  undogui.h
  undomanager.h
  unicodesearch.h
  upgradechecker.h
  urllauncher.h
  useprintermarginsdialog.h
  vruler.h
  werktoolb.h
)

SET(SCRIBUS_SOURCES
  about.cpp
  aboutplugins.cpp
  actionmanager.cpp
  aligndistribute.cpp
  alignselect.cpp
  annotation.cpp
  annota.cpp
  annot.cpp
  applytemplatedialog.cpp
  arrowchooser.cpp
  autoformbuttongroup.cpp
  autoform.cpp
  bookmwin.cpp
  bookpalette.cpp
  buttonicon.cpp
  canvas.cpp
  canvasgesture_rectselect.cpp
  canvasmode.cpp
  canvasmode_legacy.cpp
  canvasmode_nodeedit.cpp
  charselect.cpp
  chartablemodel.cpp
  chartableview.cpp
  charzoom.cpp
  checkDocument.cpp
  cmserrorhandling.cpp
  cmykfw.cpp
  cmsprefs.cpp
  cmsettings.cpp
  collect4output.cpp
  colorblind.cpp
  colorchart.cpp
  colorcombo.cpp
  colorlistbox.cpp
  colorm.cpp
  colorsetmanager.cpp
  commonstrings.cpp
  cpalette.cpp
  createrange.cpp
  cupsoptions.cpp
  curvewidget.cpp
  customfdialog.cpp
  dcolor.cpp
  deferredtask.cpp
  delpages.cpp
  docinfo.cpp
  docitemattrprefs.cpp
  docsections.cpp
  documentchecker.cpp
  documentinformation.cpp
  druck.cpp
  editor.cpp
  effectsdialog.cpp
  exif.cpp
  extimageprops.cpp
  fileloader.cpp
  filesearch.cpp
  fileunzip.cpp
  filewatcher.cpp
  fontcombo.cpp
  fontprefs.cpp
  fontreplacedialog.cpp
  fparser.cpp
  fpointarray.cpp
  fpoint.cpp
  fpoptimizer.cpp
  frameedit.cpp
  gradienteditor.cpp
  gtaction.cpp
  gtfiledialog.cpp
  gtdialogs.cpp
  gtfont.cpp
  gtframestyle.cpp
  gtgettext.cpp
  gtmeasure.cpp
  gtparagraphstyle.cpp
  gtstyle.cpp
  gtwriter.cpp
  guidemanager.cpp
  guidesdelegate.cpp
  guidesmodel.cpp
  guidemanagercore.cpp
  helpbrowser.cpp
  hnjalloc.c
  hruler.cpp
  hyask.cpp
  hyphen.c
  hyphenator.cpp
  hysettings.cpp
  imageinfodialog.cpp
  insertaframe.cpp
  insertTable.cpp
  inspage.cpp
  ioapi.c
  javadocs.cpp
  langmgr.cpp
  latexeditor.cpp
  latexhighlighter.cpp
  layers.cpp
  lensdialog.cpp
  linecombo.cpp
  linkbutton.cpp
  loadsaveplugin.cpp
  loremipsum.cpp
  margindialog.cpp
  marginWidget.cpp
  measurements.cpp
  menumanager.cpp
  mergedoc.cpp
  movepage.cpp
  missing.cpp
  mpalette.cpp
  multipleduplicate.cpp
  multiprogressdialog.cpp
  muster.cpp
  navigator.cpp
  newfile.cpp
  newtemp.cpp
  observable.cpp
  oneclick.cpp
  page.cpp
  pageitem.cpp
  pageitem_desaxe.cpp
  pageitemattributes.cpp
  pageitem_imageframe.cpp
  pageitem_line.cpp
  pageitem_pathtext.cpp
  pageitem_polygon.cpp
  pageitem_polyline.cpp
  pageitem_textframe.cpp
  pageitem_latexframe.cpp
  pagelayout.cpp
  pageselector.cpp
  pagesize.cpp
  patterndialog.cpp
  pdflib.cpp
  pdflib_core.cpp
  pdfoptions.cpp
  pdfoptionsio.cpp
  pdfopts.cpp
  picsearch.cpp
  picsearchoptions.cpp
  picstatus.cpp
  pluginmanager.cpp
  pluginmanagerprefsgui.cpp
  polygonwidget.cpp
  polyprops.cpp
  prefs.cpp
  prefscontext.cpp
  prefsdialogbase.cpp
  prefsfile.cpp
  prefspanel.cpp
  prefsreader.cpp
  prefsmanager.cpp
  prefstable.cpp
  preview.cpp
  pslib.cpp
  query.cpp
  rawimage.cpp
  rc4.c
  reformdoc.cpp
  rulermover.cpp
  sampleitem.cpp
  sccolor.cpp
  sccolorengine.cpp
  sccolorshade.cpp
  sccombobox.cpp
  scdocoutput.cpp
  scdocoutput_ps2.cpp
  scinputdialog.cpp
  scfonts.cpp
  scfilewidget.cpp
  scgtplugin.cpp
  scgzfile.cpp
  scimage.cpp
  scimagestructs.cpp
  scimgdataloader.cpp
  scimgdataloader_gimp.cpp
  scimgdataloader_jpeg.cpp
  scimgdataloader_pdf.cpp
  scimgdataloader_ps.cpp
  scimgdataloader_psd.cpp
  scimgdataloader_qt.cpp
  scimgdataloader_tiff.cpp
  sclayer.cpp
  scpageoutput.cpp
  scpageoutput_ps2.cpp
  scpainter.cpp
  scpainterexbase.cpp
  scpainterex_ps2.cpp
  scpaths.cpp
  scpattern.cpp
  scplugin.cpp
  scpreview.cpp
  scraction.cpp
  scrap.cpp
  scribus.cpp
  scribusapp.cpp
  scribuscore.cpp
  scribusdoc.cpp
  scribusview.cpp
  scribusXml.cpp
  scribuswin.cpp
  scrpalettebase.cpp
  scrspinbox.cpp
  scmenu.cpp
  scmessagebox.cpp
  sctextbrowser.cpp
  sctextstruct.cpp
  sctablewidget.cpp
  sctoolbar.cpp
  search.cpp
  seiten.cpp
  selection.cpp
  selfield.cpp
  serializer.cpp
  shadebutton.cpp
  shortcutwidget.cpp
  smalignselect.cpp
  smfontcomboh.cpp
  smlinestyle.cpp
  smlinestylewidget.cpp
  smsccombobox.cpp
  smcolorcombo.cpp
  smscrspinbox.cpp
  smshadebutton.cpp
  smspinbox.cpp
  smreplacedia.cpp
  smstyleimport.cpp
  smstyleselect.cpp
  smtabruler.cpp
  smtextstyles.cpp
  smcstylewidget.cpp
  smpstylewidget.cpp
  spalette.cpp
  splash.cpp
  stencilreader.cpp
  story.cpp
  styleitem.cpp
  stylemanager.cpp
  styleselect.cpp
  styleview.cpp
  tabcheckdoc.cpp
  tabexternaltoolswidget.cpp
  tabkeyboardshortcutswidget.cpp
  tabdisplay.cpp
  tabdocument.cpp
  tabgeneral.cpp
  tabguides.cpp
  tabmanager.cpp
  tabmiscellaneous.cpp
  tabpdfoptions.cpp
  tabprinter.cpp
  tabruler.cpp
  tabscrapbook.cpp
  tabtools.cpp
  tabtypography.cpp
  tocgenerator.cpp
  tocindexprefs.cpp
  tree.cpp
  tt/simpletreemodel/treeitem.cpp
  tt/simpletreemodel/treemodel.cpp
  schelptreemodel.cpp
  undogui.cpp
  undomanager.cpp
  updatemanager.cpp
  undoobject.cpp
  undostack.cpp
  undostate.cpp
  unicodesearch.cpp
  units.cpp
  unzip.c
  upgradechecker.cpp
  urllauncher.cpp
  useprintermarginsdialog.cpp
  util.cpp
  util_cms.cpp
  util_color.cpp
  util_formats.cpp
  util_ghostscript.cpp
  util_icon.cpp
  util_math.cpp
  util_printer.cpp
  vgradient.cpp
  vgradientex.cpp
  vruler.cpp
  werktoolb.cpp
)

IF(WIN32)
  SET(SCRIBUS_MOC_WIN32_ONLY_CLASSES scwinprint.h)
  SET(SCRIBUS_WIN32_ONLY_SOURCES
      scpainterex_gdi.cpp
      scwinprint.cpp
      )
  SET(SCRIBUS_MAIN_CPP main_win32.cpp)
ELSE(WIN32)
  SET(SCRIBUS_MOC_WIN32_ONLY_CLASSES)
  SET(SCRIBUS_WIN32_ONLY_SOURCES)
  SET(SCRIBUS_MAIN_CPP main.cpp)
ENDIF(WIN32)

QT4_WRAP_UI(SCRIBUS_UI_SOURCES ${SCRIBUS_UI_SRC} )

QT4_WRAP_CPP(SCRIBUS_MOC_SOURCES
	${SCRIBUS_MOC_CLASSES}
	${SCRIBUS_MOC_WIN32_ONLY_CLASSES}
	)

LINK_DIRECTORIES(
  ${scribus_BINARY_DIR}/desaxe
  ${scribus_BINARY_DIR}/text
  ${scribus_BINARY_DIR}/styles
  ${scribus_BINARY_DIR}fonts
)

SET(SCRIBUS_TEXT_LIB "scribus_text_lib")
SET(SCRIBUS_STYLES_LIB "scribus_styles_lib")
SET(SCRIBUS_FONTS_LIB "scribus_fonts_lib")
SET(SCRIBUS_DESAXE_LIB "scribus_desaxe_lib")

INCLUDE_DIRECTORIES(
  ${CMAKE_SOURCE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
)

IF(APPLEBUNDLE)
  SET(EXE_NAME "Scribus${TAG_VERSION}" CACHE TYPE STRING)
ELSE(APPLEBUNDLE)
  SET(EXE_NAME "scribus${TAG_VERSION}" CACHE TYPE STRING)
ENDIF(APPLEBUNDLE)

ADD_EXECUTABLE(${EXE_NAME}
  ${SCRIBUS_MOC_SOURCES}
  ${SCRIBUS_SOURCES}
  ${SCRIBUS_MAIN_CPP}
  ${SCRIBUS_UI_SOURCES}
  ${SCRIBUS_TEXT_SOURCES}
  ${SCRIBUS_STYLES_SOURCES}
  ${SCRIBUS_FONTS_SOURCES}
  ${SCRIBUS_DESAXE_SOURCES}
  ${SCRIBUS_WIN32_ONLY_SOURCES}
)

IF(WIN32)
  SET_TARGET_PROPERTIES(${EXE_NAME}
	PROPERTIES
	COMPILE_FLAGS -DCOMPILE_SCRIBUS_MAIN_APP
	ENABLE_EXPORTS TRUE
	)
  SET(WIN32_ONLY_LIBS GdiPlus.lib mscms.lib)
ELSE(WIN32)
  SET(WIN32_ONLY_LIBS)
ENDIF(WIN32)

#Set up libraries to link with all found packages

#Select Libart_LGPL or Cairo
IF(RENDER_LIB STREQUAL "CAIRO")
  INCLUDE_DIRECTORIES(${CAIRO_INCLUDE_DIR})
  TARGET_LINK_LIBRARIES(${EXE_NAME} ${CAIRO_LIBRARIES})
  LINK_DIRECTORIES(${PREFIX_CAIRO_LIB})
  SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_RPATH};${PREFIX_CAIRO_LIB}")
ENDIF(RENDER_LIB STREQUAL "CAIRO")

MESSAGE("RPATH: ${CMAKE_INSTALL_RPATH}")

TARGET_LINK_LIBRARIES(${EXE_NAME}
  ${QT_LIBRARIES}
  ${CUPS_LIBRARIES}
  ${FREETYPE_LIBRARIES}
  ${FONTCONFIG_LIBRARIES}
  ${LCMS_LIBRARIES}
  ${LIBXML2_LIBRARIES}
  ${PYTHON_LIBRARIES}
  ${TIFF_LIBRARIES}
  ${JPEG_LIBRARIES}
  ${ZLIB_LIBRARIES}
  ${WIN32_ONLY_LIBS}
)

IF(WIN32)
  TARGET_LINK_LIBRARIES(${EXE_NAME} ${QT_QTMAIN_LIBRARY})
ENDIF(WIN32)

IF(APPLE)
  TARGET_LINK_LIBRARIES(${EXE_NAME}
    "-undefined dynamic_lookup"
    "-framework CoreFoundation" )
ENDIF(APPLE)

TARGET_LINK_LIBRARIES(${EXE_NAME}
  ${SCRIBUS_DESAXE_LIB}
  ${SCRIBUS_TEXT_LIB}
  ${SCRIBUS_STYLES_LIB}
  ${SCRIBUS_FONTS_LIB}
)

# Now build plugins
SET(PLUGIN_LIBRARIES)
IF(WIN32)
  SET(PLUGIN_LIBRARIES
    ${QT_LIBRARIES}
    ${FREETYPE_LIBRARIES}
    ${LCMS_LIBRARIES}
    ${LIBXML2_LIBRARIES}
    ${TIFF_LIBRARIES}
    ${JPEG_LIBRARIES}
    ${ZLIB_LIBRARIES}
    ${EXE_NAME}
    )
ENDIF(WIN32)
IF(APPLE)
  SET(PLUGIN_LIBRARIES "-undefined dynamic_lookup")
ENDIF(APPLE)

ADD_SUBDIRECTORY(plugins)

#do we want a lib suffix on osx? doubt it
IF(APPLEBUNDLE)
  INSTALL(DIRECTORY DESTINATION MacOS)
  INSTALL(TARGETS ${EXE_NAME}
    RUNTIME DESTINATION MacOS
    LIBRARY DESTINATION lib
    )
ELSE(APPLEBUNDLE)
  IF(WIN32)
    INSTALL(TARGETS ${EXE_NAME}
      RUNTIME DESTINATION .
      LIBRARY DESTINATION ${LIB_DIR_NAME}
      )
  ELSE(WIN32)
    INSTALL(TARGETS ${EXE_NAME}
      RUNTIME DESTINATION bin
      LIBRARY DESTINATION ${LIB_DIR_NAME}
      )
  ENDIF(WIN32)
ENDIF(APPLEBUNDLE)

#Install our header files, selected from all existing dirs
FILE( GLOB_RECURSE SCRIBUS_HEADER_FILES *.h )
INSTALL(FILES ${SCRIBUS_HEADER_FILES} DESTINATION ${INCLUDEDIR})
