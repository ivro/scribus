

 THIS SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, EXPRESS,
 IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
 MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

 IN NO EVENT SHALL MARTI MARIA BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT
 OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER RESULTING FROM
 LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF THE POSSIBILITY OF
 DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT OF OR IN CONNECTION WITH
 THE USE OR PERFORMANCE OF THIS SOFTWARE.

 The lprof library is distributed under

                GNU GENERAL PUBLIC LICENSE


 As a special exception, Klas Kalass and Marti Maria gives permission to link 
 this program with Qt non-commercial edition, and distribute the resulting 
 executable, without including the source code for the Qt non-commercial 
 edition in the source distribution.

 See file COPYING. for details

 This program was originally developed in conjunction with LittleCMS
 at http://www.littlecms.com/. Marti Maria discontinued development
 of the tool and maintainance is now separate.

 This release is a somewhat tweaked package based on the second public release
 by Marti, who wrote:

   This is the 2nd. public release of the profilers. It has not been tested
   extensively, so is possible some bugs may still arise. 

  Requirements
  ============

  In order to execute the profiling utilities, you will need:

  - Trolltech's Qt installed (www.trolltech.com)
  - Littlecms color engine installed (www.littlecms.com)
  - GNU C compiler gcc or equivalent installed. MS VC++ 6 in Windows 
    systems required in order to use Qt.
  - A working make utility. (not required on windows)

  Additionaly, in order to calibrate scanner, you will need an IT8 target.


  
  Installation
  ============

  Untar the package (you already did it) and then type 'make'. The
  binaries will be placed on root of distribution. There are no files
  installed outside distribution directory. You will end with 5 programs:

	- Measurement tool 
	- Monitor profiler
	- Scanner profiler
	- Profile checker
	- ICC2IT8 program


  if something goes wrong (on UNIX), try the gcc compiler and GNU make by using

    gmake CC=gcc

  You may also need to tell lprof where your Qt headers, binaries, etc
  are installed. If they're all under one directory, use:

    gmake QTDIR=/usr/qt3

  (assuming your Qt directory is /usr/qt3 of course). If they're scattered
  around like some Linux distributors do, you can instead specify the location
  of the bits:

    gmake QT_BINDIR=/usr/bin QT_INCDIR=/usr/include/qt3

  (the above is correct for Debian Sarge, with libqt3-mt-dev installed)

  Note that you can use environment variables instead of make arguments too,
  so if your QTDIR is correctly set in your environment you don't need to do
  anything to get a working build.

  When compilation has completed successfully, you can run:

    make install

  to actually install the binaries. You can use the BASEDIR variable to tell
  lprof where to install everything under, or you can use BINDIR, INCDIR,
  DOCDIR and LIBDIR for more detailed control. By default, everything is
  installed to the bin, lib, share/doc, and include subdirs of /usr/local .

  KDE
  ===

  For obtainig KDE specific programs, type

  make USE_KDE=yes all

 
  After installation, see MANUAL.TXT for a guided tour.

 

 Installing new target reference files
 =====================================
 If the target vendor gives you a diskette, press the "..." button on right 
 and select the floppy drive.  You can add references by copying reference 
 files into the directory.

 IMPORTANT: DON'T PLACE ANY SPARE FILES, ONLY TARGET REFERENCES.

   
   
 Final notes
 ===========

 Don't expect magic. These profilers does build ICC profiles for your
 devices, but is up to the application to use this profiles in order to
 accomplish color management. Adobe's PhotoShop, for example does 
 understand these profiles. Littlecms comes also with a utility for
 converting tiff files. If you want to see how can better this system
 the color reproduction, convert a scanned image to monitor space

    tifficc /iscanner.icm /omonitor.icm image_in.tif image_out.tif

 Also note that Qt does not support all types of image. TIFF, for example
 is not supported. JPEG, BMP are generally available. The list of 
 supported formats does vary on platform and Qt version. Work on adding
 support for other image formats outside of Qt is ongoing.
 
 
